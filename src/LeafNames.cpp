/**
 * This file was generated by bin2cpp v3.0.0
 * Copyright (C) 2013-2023 end2endzone.com. All rights reserved.
 * bin2cpp is open source software, see http://github.com/end2endzone/bin2cpp
 * Source code for file 'leaf_names.ewe', last modified 1716307184.
 * Do not modify this file.
 */
#if defined(_WIN32) && !defined(_CRT_SECURE_NO_WARNINGS)
#define _CRT_SECURE_NO_WARNINGS
#endif
#include "EWGraphics/resources/LeafNames.h"
#include <string> //for std::string
#include <iostream>
#include <fstream>  //for ofstream
namespace bin2cpp
{
  class Leaf_namesEweFile : public virtual bin2cpp::File
  {
  public:
    Leaf_namesEweFile() { build(); }
    virtual ~Leaf_namesEweFile() {}
    virtual size_t getSize() const { return 43; }
    virtual const char * getFileName() const { return "leaf_names.ewe"; }
    virtual const char * getFilePath() const { return getFileName(); }
    virtual const char * getBuffer() const { return mBuffer.c_str(); }
    void build()
    {
      mBuffer.clear();
      mBuffer.reserve(getSize()); //allocate all required memory at once to prevent reallocations
      mBuffer.append("2.1.0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\001\0\0\0\0\0\0\0leafe", 43);
    }
    virtual bool save(const char * filename) const
    {
      std::ofstream f(filename, std::ios::out | std::ios::binary | std::ios::trunc);
      if (f.fail()) return false;
      size_t fileSize = getSize();
      const char * buffer = getBuffer();
      f.write(buffer, fileSize);
      f.close();
      return true;
    }
  private:
    std::string mBuffer;
  };
  const File & getLeaf_namesEweFile() { static Leaf_namesEweFile _instance; return _instance; }
}; //bin2cpp
